\documentclass{article}
\usepackage{pgffor}%
\usepackage{bashful}
\usepackage{graphicx}
\usepackage{xstring}
\usepackage[cm]{fullpage}
\usepackage[shortlabels]{enumitem}
\usepackage[colorlinks,linkcolor=blue]{hyperref}
\usepackage{caption}
\usepackage{setspace}
\doublespacing
\pdfminorversion=5
\pdfobjcompresslevel=5 
\pdfcompresslevel=9
\usepackage{mathptmx}

<<setup, fig.keep='all',echo=FALSE, eval=TRUE, error=FALSE, warning=FALSE, message=FALSE>>=
options(replace.assign=TRUE,width=70)
library(knitr)
library(ggplot2)
library(reshape2)
library(plyr)
library(grid)
library(gridExtra)

opts_chunk$set(fig.path='fig-', cache.path='cache/', fig.align='center', fig.width=5, fig.height=5, fig.show='hold', par=TRUE, cache=TRUE, concordance=TRUE, autodep=TRUE, warning=FALSE, message=FALSE)
source("../AcmTransactions/code/themeStimuli.R")
createSine <- function(n=200, len=1, f=f, fprime=fprime, f2prime=f2prime, a=0, b=2*pi) {
  x <- seq(a, b, length=n+2)[(2:(n+1))]
  ell <- rep(len, length=length(x))
  fx <- f(x)
  ystart <- fx - .5*ell
  yend <- fx + .5*ell
  
  # now correct for line illusion in vertical direction
  dy <- diff(range(fx))
  dx <- diff(range(x))
  # fprime works in framework of dx and dy, but we represent it in framework of dx and dy+len
  # needs to be fixed by factor a:  
  a <- dy/(dy + len) 
  # ellx is based on the "trig" correction
  ellx <- ell / cos(atan(abs(a*fprime(x))))
  # ellx2 is based on linear approximation of f  
  ellx2 <- ell * sqrt(1 + a^2*fprime(x)^2)
  
  # make this a data frame - ggplot2 doesn't do well with floating vectors
  dframe <- data.frame(x=x, xstart=x, xend=x, y=fx, ystart=ystart, yend=yend, ell=ell, ellx = ellx, ellx2=ellx2)
  
  # third adjustment is based on quadratic approximation of f.
  # this needs two parts: correction above and below f(x)  
  
  fp <- a*fprime(x)
  f2p <- a*f2prime(x)
  lambdap <- (sqrt((fp^2+1)^2-f2p*fp^2*ell) + fp^2 + 1)^-1    
  lambdam <- -(sqrt((fp^2+1)^2+f2p*fp^2*ell) + fp^2 + 1)^-1    
  
  
  dframe$ellx4.l <- (4*abs(lambdap)*sqrt(1+fp^2))^-1
  dframe$ellx4.u <- (4*abs(lambdam)*sqrt(1+fp^2))^-1
  
  dframe
}
source("./correctData.R")

weightYTrans <- function(df, w){
  df$elltrans <- w*df$ellx2/2 + (1-w)*df$ell/2
  df$ystart <- df$y - df$elltrans
  df$yend <- df$y + df$elltrans
  df$w <- w
  df
}
@

<<mullerlyer, echo=FALSE, fig.width=2, fig.height=2, include=FALSE, warning=FALSE, message=FALSE>>=
y.a <- .05
x.a <- .05

data <- rbind(
        data.frame(x=c(.75, .75, .75-x.a, .75, .75+x.a, .75-x.a, .75, .75+x.a), 
                   y=c(0, 1, y.a, 0, y.a, 1-y.a, 1, 1-y.a), 
                   group=c(1, 1, 2, 2, 2, 3, 3, 3), label="A"),
        data.frame(x=c(.5, .5, .5-x.a, .5, .5+x.a, .5-x.a, .5, .5+x.a), 
                   y=c(0, 1, -y.a, 0, -y.a, 1+y.a, 1, 1+y.a), 
                   group=c(4, 4, 5, 5, 5, 6, 6, 6), label="B"))
qplot(data=data, x=x, y=y, group=group, geom="path") + theme_bw() + 
    theme(panel.grid.minor=element_blank(), panel.background=element_rect(fill="transparent", colour=NA), 
        plot.background=element_rect(fill="transparent", colour=NA),
        panel.border = element_blank(), panel.grid = element_blank(), 
        axis.title = element_blank(), axis.ticks = element_blank(), 
        axis.text = element_blank(), plot.margin=unit(c(0.25,0,-.5,-.5),"line"))
@

<<sineillusion, echo=FALSE, include=FALSE, warning=FALSE, message=FALSE, fig.keep='none'>>=
set.seed(342053298)
order <- sample(c(paste0("0", 1:9), as.character(10:14)), 14, replace=FALSE)
i <- 1

f <- function(x) 2*sin(x)
fprime <- function(x) 2*cos(x)
f2prime <- function(x) -2*sin(x)

data <- createSine(40, 1, f=f, fprime=fprime, f2prime)
qplot(x=x, xend=xend, y = ystart, yend=yend, geom="segment", data=data, colour=I("black")) +
  theme(panel.grid.minor=element_blank(), panel.background=element_rect(fill="transparent", colour=NA), 
        plot.background=element_rect(fill="transparent", colour=NA),
        axis.title = element_blank(), axis.ticks = element_blank(), 
        axis.text = element_blank(),plot.margin=unit(c(0.25,0,-.5,-.5),"line")) + coord_equal(ratio=1)
ggsave(paste0("fig-", order[i], "-sine-uncorrected.png"), width=3, height=2, units="in"); i <- i+1

data.xcor <- correct.x(x="x", y="y", data=data, f=f, fprime=fprime, f2prime=f2prime, weight=1)
qplot(x=x.correctx, xend=x.correctx, y = ystart, yend=yend, geom="segment", data=data.xcor, colour=I("black")) +
  theme(
        panel.grid.minor=element_blank(), panel.background=element_rect(fill="transparent", colour=NA), plot.background=element_rect(fill="transparent", colour=NA),
        axis.title = element_blank(), axis.ticks = element_blank(), 
        axis.text = element_blank(),plot.margin=unit(c(0.25,0,-.5,-.5),"line") ) + coord_equal(ratio=1)
ggsave(paste0("fig-", order[i], "-sine-correctx-full.png"), width=3, height=2, units="in"); i <- i+1

data.xcor <- correct.x(x="x", y="y", data=data, f=f, fprime=fprime, f2prime=f2prime, weight=.36)
qplot(x=x.correctx, xend=x.correctx, y = ystart, yend=yend, geom="segment", data=data.xcor, colour=I("black")) +
  theme(
        panel.grid.minor=element_blank(), panel.background=element_rect(fill="transparent", colour=NA), plot.background=element_rect(fill="transparent", colour=NA),
        axis.title = element_blank(), axis.ticks = element_blank(), 
        axis.text = element_blank(),plot.margin=unit(c(0.25,0,-.5,-.5),"line") ) + coord_equal(ratio=1)
ggsave(paste0("fig-", order[i], "-sine-correctx-optimal.png"), width=3, height=2, units="in"); i <- i+1

data.xcor <- correct.x(x="x", y="y", data=data, f=f, fprime=fprime, f2prime=f2prime, weight=.6)
qplot(x=x.correctx, xend=x.correctx, y = ystart, yend=yend, geom="segment", data=data.xcor, colour=I("black")) +
  theme(
        panel.grid.minor=element_blank(), panel.background=element_rect(fill="transparent", colour=NA), plot.background=element_rect(fill="transparent", colour=NA),
        axis.title = element_blank(), axis.ticks = element_blank(), 
        axis.text = element_blank(),plot.margin=unit(c(0.25,0,-.5,-.5),"line") ) + coord_equal(ratio=1)
ggsave(paste0("fig-", order[i], "-sine-correctx-0-6.png"), width=3, height=2, units="in"); i <- i+1

qplot(x=x, xend=xend, y = ystart, yend=yend, geom="segment", data=weightYTrans(data, 1), colour=I("black")) +
  theme(
        panel.grid.minor=element_blank(), panel.background=element_rect(fill="transparent", colour=NA), plot.background=element_rect(fill="transparent", colour=NA),
        axis.title = element_blank(), axis.ticks = element_blank(), 
        axis.text = element_blank(),plot.margin=unit(c(0.25,0,-.5,-.5),"line") ) + coord_equal(ratio=1)
ggsave(paste0("fig-", order[i], "--sine-correcty-full.png"), width=3, height=2, units="in"); i <- i+1

qplot(x=x, xend=xend, y = ystart, yend=yend, geom="segment", data=weightYTrans(data, .4), colour=I("black")) +
  theme(
        panel.grid.minor=element_blank(), panel.background=element_rect(fill="transparent", colour=NA), plot.background=element_rect(fill="transparent", colour=NA),
        axis.title = element_blank(), axis.ticks = element_blank(), 
        axis.text = element_blank(),plot.margin=unit(c(0.25,0,-.5,-.5),"line") ) + coord_equal(ratio=1)
ggsave(paste0("fig-", order[i], "-sine-correcty-optimal.png"), width=3, height=2, units="in"); i <- i+1

qplot(x=x, xend=xend, y = ystart, yend=yend, geom="segment", data=weightYTrans(data, .6), colour=I("black")) +
  theme(
        panel.grid.minor=element_blank(), panel.background=element_rect(fill="transparent", colour=NA), plot.background=element_rect(fill="transparent", colour=NA),
        axis.title = element_blank(), axis.ticks = element_blank(), 
        axis.text = element_blank(),plot.margin=unit(c(0.25,0,-.5,-.5),"line") ) + coord_equal(ratio=1)
ggsave(paste0("fig-", order[i], "-sine-correcty-0-6.png"), width=3, height=2, units="in"); i <- i+1


f <- function(x) exp(x/2)
fprime <- function(x) 1/2*exp(x/2)
f2prime <- function(x) 1/4*exp(x/2)

data <- createSine(40, 1, f=f, fprime=fprime, f2prime, -pi, pi)
qplot(x=x, xend=xend, y = ystart, yend=yend, geom="segment", data=data, colour=I("black")) +
  theme(
        panel.grid.minor=element_blank(), panel.background=element_rect(fill="transparent", colour=NA), plot.background=element_rect(fill="transparent", colour=NA),
        axis.title = element_blank(), axis.ticks = element_blank(), 
        axis.text = element_blank(),plot.margin=unit(c(0.25,0,-.5,-.5),"line") ) + coord_equal(ratio=1)
ggsave(paste0("fig-", order[i], "--exp-uncorrected.png"), width=3, height=2, units="in"); i <- i+1

data.xcor <- correct.x(x="x", y="y", data=data, f=f, fprime=fprime, f2prime=f2prime, weight=1)
qplot(x=x.correctx, xend=x.correctx, y = ystart, yend=yend, geom="segment", data=data.xcor, colour=I("black")) +
  theme(
        panel.grid.minor=element_blank(), panel.background=element_rect(fill="transparent", colour=NA), plot.background=element_rect(fill="transparent", colour=NA),
        axis.title = element_blank(), axis.ticks = element_blank(), 
        axis.text = element_blank(),plot.margin=unit(c(0.25,0,-.5,-.5),"line") ) + coord_equal(ratio=1)
ggsave(paste0("fig-", order[i], "-exp-correctx-full.png"), width=3, height=2, units="in"); i <- i+1

data.xcor <- correct.x(x="x", y="y", data=data, f=f, fprime=fprime, f2prime=f2prime, weight=.36)
qplot(x=x.correctx, xend=x.correctx, y = ystart, yend=yend, geom="segment", data=data.xcor, colour=I("black")) +
  theme(
        panel.grid.minor=element_blank(), panel.background=element_rect(fill="transparent", colour=NA), plot.background=element_rect(fill="transparent", colour=NA),
        axis.title = element_blank(), axis.ticks = element_blank(), 
        axis.text = element_blank(),plot.margin=unit(c(0.25,0,-.5,-.5),"line") ) + coord_equal(ratio=1)
ggsave(paste0("fig-", order[i], "-exp-correctx-optimal.png"), width=3, height=2, units="in"); i <- i+1

data.xcor <- correct.x(x="x", y="y", data=data, f=f, fprime=fprime, f2prime=f2prime, weight=.6)
qplot(x=x.correctx, xend=x.correctx, y = ystart, yend=yend, geom="segment", data=data.xcor, colour=I("black")) +
  theme(
        panel.grid.minor=element_blank(), panel.background=element_rect(fill="transparent", colour=NA), plot.background=element_rect(fill="transparent", colour=NA),
        axis.title = element_blank(), axis.ticks = element_blank(), 
        axis.text = element_blank(),plot.margin=unit(c(0.25,0,-.5,-.5),"line") ) + coord_equal(ratio=1)
ggsave(paste0("fig-", order[i], "-exp-correctx-0-6.png"), width=3, height=2, units="in"); i <- i+1



qplot(x=x, xend=xend, y = ystart, yend=yend, geom="segment", data=weightYTrans(data, 1), colour=I("black")) +
  theme(panel.grid.minor=element_blank(), panel.background=element_rect(fill="transparent", colour=NA), 
        plot.background=element_rect(fill="transparent", colour=NA),
        axis.title = element_blank(), axis.ticks = element_blank(), 
        axis.text = element_blank(),plot.margin=unit(c(0.25,0,-.5,-.5),"line") ) + coord_equal(ratio=1)
ggsave(paste0("fig-", order[i], "-exp-correcty-full.png"), width=3, height=2, units="in"); i <- i+1

qplot(x=x, xend=xend, y = ystart, yend=yend, geom="segment", data=weightYTrans(data, .4), colour=I("black")) +
  theme(panel.grid.minor=element_blank(), panel.background=element_rect(fill="transparent", colour=NA), 
        plot.background=element_rect(fill="transparent", colour=NA),
        axis.title = element_blank(), axis.ticks = element_blank(), 
        axis.text = element_blank(),plot.margin=unit(c(0.25,0,-.5,-.5),"line") ) + coord_equal(ratio=1)
ggsave(paste0("fig-", order[i], "-exp-correcty-optimal.png"), width=3, height=2, units="in"); i <- i+1

qplot(x=x, xend=xend, y = ystart, yend=yend, geom="segment", data=weightYTrans(data, .6), colour=I("black")) +
  theme(panel.grid.minor=element_blank(), panel.background=element_rect(fill="transparent", colour=NA), 
        plot.background=element_rect(fill="transparent", colour=NA),
        axis.title = element_blank(), axis.ticks = element_blank(), 
        axis.text = element_blank(),plot.margin=unit(c(0.25,0,-.5,-.5),"line") ) + coord_equal(ratio=1)
ggsave(paste0("fig-", order[i], "-exp-correcty-0-6.png"), width=3, height=2, units="in"); i <- i+1
@
<<neckercube1, echo=FALSE, fig.width=2, fig.height=2, include=FALSE, warning=FALSE, message=FALSE>>=
data <- rbind(data.frame(x=c(0, 1, 1.5, 1.5, 0.5, 0, 0), y=c(0, 0, 0.25, 1.25, 1.25, 1, 0), group=1, line=1),
              data.frame(x=c(0, .5, 1.5), y=c(0, .25, .25), group=2, line=2), 
              data.frame(x=c(.5, .5), y=c(.25, 1.25), group=3, line=2),
              data.frame(x=c(0,  1, 1.5), y=c(1, 1, 1.25), group=4, line=3),
              data.frame(x=c(1, 1), y=c(1, 0), group=5, line=3))

data <- rbind(cbind(data, label="Necker Cube"), cbind(data, label="Interpretation 1"), cbind(data, label="Interpretation 2"))
data$line[data$label=="Necker Cube"] <- 1
data$line[data$label=="Interpretation 2" & data$line==2] <- 1
data$line[data$label=="Interpretation 1" & data$line==3] <- 1

qplot(data=subset(data, label=="Necker Cube"), 
            x=x, y=y, group=group, geom="path", linetype=factor(line), colour=factor(line)) + 
  scale_linetype_discrete(guide="none") + scale_colour_manual(guide="none", values=c("black", "grey40", "grey40")) + 
  theme(panel.grid.major=element_blank(), panel.background = element_rect(fill = "white", colour = "white"),
        panel.grid.minor=element_blank(), panel.background=element_blank(),
        axis.title = element_blank(), axis.ticks = element_blank(), 
        axis.text = element_blank(), text=element_text(size=10), 
        plot.background=element_rect(fill="transparent", colour=NA))
@
<<neckercube2, echo=FALSE, fig.width=3.3, fig.height=2, include=FALSE, warning=FALSE, message=FALSE>>=
qplot(data=subset(data, label!="Necker Cube"), 
            x=x, y=y, group=group, geom="path", linetype=factor(line), colour=factor(line)) + facet_wrap(~label) + scale_linetype_discrete(guide="none") + scale_colour_manual(guide="none", values=c("black", "grey40", "grey40")) + 
  theme(panel.grid.major=element_blank(), panel.background = element_rect(fill = "white", colour = "white"),
        panel.grid.minor=element_blank(), panel.background=element_blank(),
        axis.title = element_blank(), axis.ticks = element_blank(), 
        axis.text = element_blank(), text=element_text(size=10), 
        plot.background=element_rect(fill="transparent", colour=NA))
@
\begin{document}

\begin{center}
\large{Interview Consent Form}
\end{center}

You have been asked to participate in an interview conducted by \underline{Susan Vanderplas} from the \underline{Statistics Department} at Iowa State University. The purpose of this interview is to explore the relationship between depth perception and certain optical illusions. The results of this study may be described in a research paper and may also be described in oral presentations about this work. Your participation is entirely voluntary; you may refuse to answer any question and you may leave at any time. \vspace{.25in}

\singlespacing
\noindent In order to indicate your consent to participate in this interview, please initial and complete the following: \vspace{.25in}
\begin{itemize}
\item I consent to the use of this interview in research publications and presentations: \underline{\hspace{1in}}\vspace{.5cm}\\
In order to protect my privacy, the researcher may use the alias \underline{\hspace{1in}} in the publication \\
(typically, the participant's initials; John Doe would be abbreviated JD). \\

\item I consent to the brief description of any medical conditions pertinent to this research in publications and presentations: \underline{\hspace{1in}}

\end{itemize}

\vfill
Name: \underline{\hspace{3in}}\vspace{.5in}

Signature: \underline{\hspace{3in}}\vspace{.5in}\hfill Date: \underline{\hspace{1in}}

Signature of Investigator: \underline{\hspace{3in}}\hfill Date: \underline{\hspace{1in}}
\clearpage
\hfill
\clearpage

\bash[stdoutFile=sineillusionfigs.tex]
{ shopt -s nullglob; 
  for file in ./*.png; 
    do echo "\begin{minipage}[b]{.5\linewidth}\begin{center}\includegraphics[keepaspectratio=TRUE]{$file}\captionof{figure}{\underline{\hspace{2in}}}\end{center}\end{minipage}"; 
  done; 
} 
\END
\input{sineillusionfigs.tex}
\begin{minipage}[b]{.5\linewidth}
\begin{center}
\includegraphics[keepaspectratio=TRUE]{fig-mullerlyer}\vspace{-10pt}\\
\captionof{figure}{\underline{\hspace{2in}}}
\end{center}
\end{minipage}
\begin{minipage}[b]{.5\linewidth}
\begin{center}
\includegraphics[keepaspectratio=TRUE, width=.3\linewidth]{fig-neckercube1}\vspace{-20pt}\\
\includegraphics[keepaspectratio=TRUE, width=.6\linewidth]{fig-neckercube2}\vspace{-20pt}\\
\captionof{figure}{\underline{\hspace{2in}}}
\end{center}
\end{minipage}
\end{document}